/**
 * Script para probar la conexi√≥n a MongoDB
 */
const mongoose = require('mongoose');
require('dotenv').config();

async function testConnection() {
  console.log('üîÑ Probando conexi√≥n a MongoDB...');
  
  try {
    // Mostrar URI sin mostrar contrase√±a
    const uri = process.env.MONGODB_URI || 'No configurado';
    const maskedUri = uri.replace(/\/\/([^:]+):([^@]+)@/, '//***:***@');
    console.log(`üìÑ URI: ${maskedUri}`);
    
    // Intentar conexi√≥n
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Conexi√≥n exitosa a MongoDB');
    
    // Listar colecciones
    const collections = await mongoose.connection.db.listCollections().toArray();
    console.log('üìã Colecciones disponibles:');
    collections.forEach(collection => {
      console.log(`  - ${collection.name}`);
    });
    
    // Verificar modelos
    const User = mongoose.model('User', new mongoose.Schema({
      username: String,
      email: String,
      password: String,
      role: String
    }));
    
    const count = await User.countDocuments();
    console.log(`üë§ Usuarios en la base de datos: ${count}`);
    
    // Cerrar conexi√≥n
    await mongoose.connection.close();
    console.log('‚úÖ Conexi√≥n cerrada correctamente');
    
  } catch (error) {
    console.error('‚ùå Error de conexi√≥n a MongoDB:');
    console.error(error.message);
    
    if (error.message.includes('Authentication failed')) {
      console.log('\n‚ö†Ô∏è Posibles soluciones:');
      console.log('1. Verifica que el usuario y contrase√±a en MONGODB_URI sean correctos');
      console.log('2. Aseg√∫rate que la IP desde donde te conectas est√© en la lista blanca de MongoDB Atlas');
    }
    
    if (error.message.includes('ENOTFOUND')) {
      console.log('\n‚ö†Ô∏è Posibles soluciones:');
      console.log('1. Verifica que el nombre del host en MONGODB_URI sea correcto');
      console.log('2. Aseg√∫rate de tener conexi√≥n a internet');
    }
  }
}

// Ejecutar prueba
testConnection().catch(console.error); 